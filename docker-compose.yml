version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:14-alpine
    container_name: hahn-crud-db
    environment:
      POSTGRES_DB: hahn_crud_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - hahn-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hahn-crud-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/hahn_crud_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
      SERVER_ADDRESS: 0.0.0.0
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - hahn-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/products"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React Frontend
  frontend:
    build:
      context: ./frontend/hahn-frontend
      dockerfile: Dockerfile
    container_name: hahn-crud-frontend
    environment:
      VITE_API_BASE_URL: http://localhost:8080/api
    ports:
      - "5173:5173"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - hahn-network

volumes:
  postgres_data:
    driver: local

networks:
  hahn-network:
    driver: bridge

